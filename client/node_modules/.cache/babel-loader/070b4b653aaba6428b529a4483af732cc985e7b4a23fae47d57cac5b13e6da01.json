{"ast":null,"code":"var _jsxFileName = \"D:\\\\ExpenseTracker\\\\client\\\\src\\\\Context\\\\TransactionProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport useAuth from '../Hooks/useAuth';\nimport useAxiosPriate from '../Hooks/useAxiosPrivate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionContext = /*#__PURE__*/createContext();\nexport const TransactionProvider = props => {\n  _s();\n  const axiosPrivate = useAxiosPriate();\n  const {\n    user\n  } = useAuth();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState();\n  const addIncome = async income => {\n    try {\n      await axiosPrivate.post('/transaction/add_income', {\n        id: user === null || user === void 0 ? void 0 : user.id,\n        data: income\n      });\n      await getIncomes(axiosPrivate);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErr(\"No Response from the server\");\n      } else {\n        setErr(err.response.data.message);\n      }\n    }\n  };\n  const getIncomes = async ap => {\n    try {\n      const res = await ap.get(`/transaction/get_incomes/${user === null || user === void 0 ? void 0 : user.id}`);\n      setIncomes(res.data.incomes);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErr(\"No Response from the server\");\n      } else {\n        setErr(err.response.data.message);\n      }\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      await axiosPrivate.delete(`/transaction/delete_income/${id}`);\n      await getIncomes(axiosPrivate);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErr(\"No Response from the server\");\n      } else {\n        setErr(err.response.data.message);\n      }\n    }\n  };\n  const totalIncome = () => {\n    let total = 0;\n    incomes.forEach(income => {\n      total += income.amount;\n    });\n    return total;\n  };\n  const addExpense = async expense => {\n    try {\n      await axiosPrivate.post('/transaction/add_expense', {\n        id: user === null || user === void 0 ? void 0 : user.id,\n        data: expense\n      });\n      await getExpenses(axiosPrivate);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErr(\"No Response from the server\");\n      } else {\n        setErr(err.response.data.message);\n      }\n    }\n  };\n  const getExpenses = async ap => {\n    try {\n      const res = await ap.get(`/transaction/get_expenses/${user === null || user === void 0 ? void 0 : user.id}`);\n      setExpenses(res.data.expenses);\n      // console.log(res.data.expenses);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErr(\"No Response from the server\");\n      } else {\n        setErr(err.response.data.message);\n      }\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      await axiosPrivate.delete(`/transaction/delete_expense/${id}`);\n      await getExpenses(axiosPrivate);\n    } catch (err) {\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErr(\"No Response from the server\");\n      } else {\n        setErr(err.response.data.message);\n      }\n    }\n  };\n  const totalExpenses = () => {\n    let total = 0;\n    expenses.forEach(expense => {\n      total += expense.amount;\n    });\n    return total;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const hist = [...incomes, ...expenses];\n    hist.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    // console.log(hist.slice(0,3));\n    return hist.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      deleteIncome,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      incomes,\n      expenses,\n      err,\n      setErr,\n      loading,\n      setLoading\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionProvider, \"7yBWSrtMaLtT1vB1IeKNoQpT+CM=\", false, function () {\n  return [useAxiosPriate, useAuth];\n});\n_c = TransactionProvider;\nexport default TransactionContext;\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["React","createContext","useState","useAuth","useAxiosPriate","jsxDEV","_jsxDEV","TransactionContext","TransactionProvider","props","_s","axiosPrivate","user","incomes","setIncomes","expenses","setExpenses","loading","setLoading","err","setErr","addIncome","income","post","id","data","getIncomes","response","message","ap","res","get","deleteIncome","delete","totalIncome","total","forEach","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","hist","sort","a","b","Date","createdAt","slice","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ExpenseTracker/client/src/Context/TransactionProvider.js"],"sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport useAuth from '../Hooks/useAuth';\r\nimport useAxiosPriate from '../Hooks/useAxiosPrivate';\r\n\r\nconst TransactionContext=createContext();\r\n\r\nexport const TransactionProvider=(props) =>{\r\n    const axiosPrivate=useAxiosPriate();\r\n    const {user} = useAuth();\r\n    const [incomes,setIncomes] = useState([]);\r\n    const [expenses,setExpenses] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    const [err,setErr] = useState();\r\n\r\n    const addIncome = async (income)=>{\r\n        try{\r\n            await axiosPrivate.post('/transaction/add_income',{id:user?.id,data:income});\r\n            await getIncomes(axiosPrivate);\r\n        }\r\n        catch (err){\r\n            if(!err?.response){\r\n                setErr(\"No Response from the server\")\r\n            }\r\n            else{\r\n                setErr(err.response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getIncomes = async (ap)=>{\r\n        try{\r\n            const res= await ap.get(`/transaction/get_incomes/${user?.id}`);\r\n            setIncomes(res.data.incomes);\r\n        }\r\n        catch(err){\r\n            if(!err?.response){\r\n                setErr(\"No Response from the server\")\r\n            }\r\n            else{\r\n                setErr(err.response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteIncome = async (id)=>{\r\n        try{\r\n            await axiosPrivate.delete(`/transaction/delete_income/${id}`);\r\n            await getIncomes(axiosPrivate);\r\n        }catch (err){\r\n            if(!err?.response){\r\n                setErr(\"No Response from the server\")\r\n            }\r\n            else{\r\n                setErr(err.response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const totalIncome =()=>{\r\n        let total=0;\r\n        incomes.forEach((income)=>{\r\n            total+=income.amount;\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const addExpense = async (expense)=>{\r\n        try{\r\n            await axiosPrivate.post('/transaction/add_expense',{id:user?.id,data:expense});\r\n            await getExpenses(axiosPrivate);\r\n        }\r\n        catch (err){\r\n            if(!err?.response){\r\n                setErr(\"No Response from the server\")\r\n            }\r\n            else{\r\n                setErr(err.response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getExpenses = async (ap)=>{\r\n        try{\r\n            const res= await ap.get(`/transaction/get_expenses/${user?.id}`);\r\n            setExpenses(res.data.expenses);\r\n            // console.log(res.data.expenses);\r\n        }\r\n        catch(err){\r\n            if(!err?.response){\r\n                setErr(\"No Response from the server\")\r\n            }\r\n            else{\r\n                setErr(err.response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteExpense = async (id)=>{\r\n        try{\r\n            await axiosPrivate.delete(`/transaction/delete_expense/${id}`);\r\n            await getExpenses(axiosPrivate);\r\n        }catch (err){\r\n            if(!err?.response){\r\n                setErr(\"No Response from the server\")\r\n            }\r\n            else{\r\n                setErr(err.response.data.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    const totalExpenses=  ()=>{\r\n        let total=0;\r\n        expenses.forEach((expense)=>{\r\n            total+=expense.amount;\r\n        })\r\n        return total;\r\n    }\r\n\r\n    const totalBalance = ()=>{\r\n        return totalIncome()-totalExpenses();\r\n    }\r\n\r\n    const transactionHistory = ()=>{\r\n        const hist=[...incomes,...expenses]\r\n        hist.sort((a,b)=>{\r\n            return new Date(b.createdAt)-new Date(a.createdAt);\r\n        });\r\n        // console.log(hist.slice(0,3));\r\n        return hist.slice(0,3);\r\n    }\r\n\r\n    return (\r\n        <TransactionContext.Provider value={\r\n            {addIncome,getIncomes,deleteIncome,totalIncome,addExpense,getExpenses,deleteExpense,totalExpenses,\r\n            totalBalance,transactionHistory,incomes,expenses,err,setErr,loading,setLoading}\r\n            }>\r\n            {props.children}\r\n        </TransactionContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TransactionContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}