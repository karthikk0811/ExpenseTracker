{"ast":null,"code":"var _jsxFileName = \"D:\\\\ExpenseTracker\\\\client\\\\src\\\\Components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport useTransactions from '../Hooks/useTransactions';\nimport { styled } from 'styled-components';\nimport FormatDate from '../utils/FormatDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nexport default function Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useTransactions();\n  const allTransactions = [...incomes, ...expenses];\n  allTransactions.sort((a, b) => {\n    return new Date(a.date.split('/').reverse().join('/')) - new Date(b.date.split('/').reverse().join('/'));\n  });\n  const groupedData = {};\n  allTransactions.forEach(transaction => {\n    const date = transaction.date;\n    if (!groupedData[date]) {\n      groupedData[date] = {\n        income: 0,\n        expense: 0\n      };\n    }\n    if (transaction.type === 'income') {\n      groupedData[date].income += transaction.amount;\n    } else {\n      groupedData[date].expense += transaction.amount;\n    }\n  });\n  const labelData = Object.keys(groupedData);\n  const data = {\n    labels: [...labelData.map(date => FormatDate(date))],\n    datasets: [{\n      label: 'Expense',\n      data: labelData.map(date => groupedData[date].expense),\n      backgroundColor: 'red',\n      tension: .2\n    }, {\n      label: 'Income',\n      data: labelData.map(date => groupedData[date].income),\n      backgroundColor: 'green',\n      tension: .2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyle, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"FpdC82RAUQaMIPQb2E7fS6qJM2o=\", false, function () {\n  return [useTransactions];\n});\n_c = Chart;\nconst ChartStyle = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyle;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyle\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","useTransactions","styled","FormatDate","jsxDEV","_jsxDEV","register","_s","incomes","expenses","allTransactions","sort","a","b","Date","date","split","reverse","join","groupedData","forEach","transaction","income","expense","type","amount","labelData","Object","keys","data","labels","map","datasets","label","backgroundColor","tension","ChartStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["D:/ExpenseTracker/client/src/Components/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    Chart as ChartJs,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport useTransactions from '../Hooks/useTransactions';\r\nimport {styled} from 'styled-components';\r\nimport FormatDate from '../utils/FormatDate';\r\n\r\nChartJs.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n);\r\n\r\nexport default function Chart() {\r\n    const { incomes, expenses } = useTransactions();\r\n    const allTransactions=[...incomes,...expenses];\r\n    allTransactions.sort((a,b)=>{\r\n        return new Date(a.date.split('/').reverse().join('/')) - new Date(b.date.split('/').reverse().join('/')) ;\r\n    });\r\n    const groupedData={};\r\n    allTransactions.forEach((transaction)=>{\r\n        const date=transaction.date;\r\n        if(!groupedData[date]){\r\n            groupedData[date]={income:0,expense:0}\r\n        }\r\n        if(transaction.type==='income'){\r\n            groupedData[date].income+=transaction.amount;\r\n        }\r\n        else{\r\n            groupedData[date].expense+=transaction.amount;\r\n        }\r\n    });\r\n    const labelData=Object.keys(groupedData);\r\n    const data={\r\n        labels:[...labelData.map((date)=>FormatDate(date))],\r\n        datasets:[\r\n            {\r\n                label:'Expense',\r\n                data:labelData.map((date)=>groupedData[date].expense),\r\n                backgroundColor:'red',\r\n                tension:.2\r\n            },\r\n            {\r\n                label:'Income',\r\n                data:labelData.map((date)=>groupedData[date].income),\r\n                backgroundColor:'green',\r\n                tension:.2\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <ChartStyle>\r\n            <Line data={data} />\r\n        </ChartStyle>\r\n    )\r\n}\r\n\r\nconst ChartStyle= styled.div`\r\n    background: #FCF6F9;\r\n    border: 2px solid #FFFFFF;\r\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n    padding: 1rem;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}